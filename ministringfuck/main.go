package main

import (
	"bytes"
	"fmt"
)

func increment(e *byte, _ *bytes.Buffer) {
	(*e)++
}

func output(e *byte, s *bytes.Buffer) {
	(*s).WriteByte(*e)
}

type handle struct {
	c uint8
	f func(*byte, *bytes.Buffer)
}

// Interpreter takes a MSF- string and return the result string
func Interpreter(code string) string {
	var memCell byte
	var out bytes.Buffer
	cmd := []handle{
		handle{'+', increment},
		handle{'.', output},
	}

	for _, c := range code {
		for _, member := range cmd {
			if member.c == uint8(c) {
				member.f(&memCell, &out)
			}
		}
	}
	return out.String()
}

func main() {
	prog
	fmt.Printf("%s\n", Interpreter(prog))
}
